var Node = function(data, prev) {
  this.data = data;
  this.prev = prev;
  this.next = null;
};
var DoublyLinkedList = function() {
  this.head = null;
  this.tail = null;
  // change code below this line
  this.add = (data)=>{
    if(!this.head){
      this.head = new Node(data, null);
    }
    else if (!this.tail){
      this.tail = new Node(data, this.head);
      this.head.next = this.tail;
      //console.log(this.head)
    }
    else {
      this.tail.next = new Node(data, this.tail);
      this.tail = this.tail.next;
    }
  }

  this.reverse = ()=>{

    //console.log(this)
    if(!this.head){
      return null;
    }

    

    let reverser = (node)=>{
      if(node.prev === null){
      node.prev = node.next;
      node.next = node.prev;
      this.tail = node;
      console.log("changing tail to " + node.data);
      return;
      }
      else{
      let newNode = node.prev;
      node.prev = node.next;
      node.next = node.prev;
      if(node.data===this.tail.data){
        this.head = node;
        console.log("changing head to " + node.data)
      }
      return reverser(newNode);
      }
    };

    reverser(this.tail);


  }
    
  
  // change code above this line
};


let a = new DoublyLinkedList;
a.add("a");
a.add("b");
a.add("c");
a.reverse();

