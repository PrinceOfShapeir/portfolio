function LinkedList() {
  var length = 0;
  var head = null;

  var Node = function(element) {
    this.element = element;
    this.next = null;
  };

  this.size = function() {
    return length;
  };

  this.head = function() {
    return head;
  };

  this.add = function(element) {
    var node = new Node(element);
    if (head === null) {
      head = node;
    } else {
      var currentNode = head;

      while (currentNode.next) {
        currentNode = currentNode.next;
      }

      currentNode.next = node;
    }
    length++;
  };

  // Only change code below this line
  this.addAt = (index, element)=>{
    let node = head;
    let previous = head;

    if(index>=length||index<0){
      return false;
    }
    else {
      for(let i = 0; i<length; i++){
        if(i===index){
          length++;
          if(previous===head){
            head = new Node(element);
            head.next = previous.next

          }
          else{
          previous.next = new Node(element);
          previous.next.next = node;
          }
          return;
        }
      previous = node;
      node = node.next;
      }
      return false;

    }


  }
  // Only change code above this line
}
