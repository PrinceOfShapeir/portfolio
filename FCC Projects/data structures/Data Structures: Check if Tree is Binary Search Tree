var displayTree = (tree) => console.log(JSON.stringify(tree, null, 2));
function Node(value) {
  this.value = value;
  this.left = null;
  this.right = null;
}
function BinarySearchTree() {
  this.root = null;
}
function isBinarySearchTree(tree) {
  // Only change code below this line
  function isBinarySearchNode(node){
    if(node&&node.value){


      function directionChecker(direction){
        if(node[direction]===null) return true; //found the end
        if(direction === 'left' && node[direction]>node.value) return false;
        if(direction === 'right' && node[direction]<node.value) return false;
        return isBinarySearchNode(node[direction].left) && isBinarySearchNode(node[direction].right) ;
      }
      if(Object.keys(node).length>3) return false;

      else return directionChecker('left') && directionChecker('right');
    } else return true; //null values indicate no conflict 
  }
  return isBinarySearchNode(tree.root);
  // Only change code above this line
}

/*
let a = new BinarySearchTree();
console.log(a);
a.root = new Node(6);
a.root.left = new Node(5);
console.log(isBinarySearchTree(a));*/
