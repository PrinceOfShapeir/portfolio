/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    
    
    
    function reader (list, output = "") {
        
        if(!list||list.val===null) {
            
            return output;
            
        } else {
            
            
            return reader (list.next, list.val.toString().concat(output));
            
            
        }
        
    }
    
    
    let number1 = BigInt(reader(l1));
    console.log(number1);
    let number2 = BigInt(reader(l2));
    console.log(number2);
    return listOutputter((number1+number2).toString().split("").reverse().join(""));
    
    function listOutputter (num) {
        console.log(num)
        
        let outputList = new ListNode(Number(num[0]));
        
        num = num.slice(1);
        
        function numLister (node) {
            
            if(!node||!num.length) return;
            
            node.next = new ListNode(Number(num[0]));
            
            num = num.slice(1);
            return numLister(node.next)
        }
        
        numLister(outputList);
        return outputList;
        
        
        
        
    }
    
};
