/**
 * @param {number} n
 */
var SeatManager = function(n) {
    
    this.unreserved = new Array(n).fill(0).map((curr, index)=>index+1)
    this.reserved = [];
};

/**
 * @return {number}
 */
SeatManager.prototype.reserve = function() {
    //console.log(this.unreserved);
    this.reserved.push(this.unreserved.shift());
    //console.log(this.reserved);
    return this.reserved[this.reserved.length-1];

};

/** 
 * @param {number} seatNumber
 * @return {void}
 */
SeatManager.prototype.unreserve = function(seatNumber) {
    
   
    let reservation = this.reserved.splice(this.reserved.indexOf(seatNumber), 1)[0];
    
    if(this.unreserved.length<1) {
        this.unreserved.push(reservation);
        return this.unreserved;
    }
    
    
    let upper = this.unreserved.length-1;
    let lower = 0;
    
    while(upper-lower>0){
            //console.log(this.unreserved)
            //console.log(upper)
            //console.log(lower)
            let midpoint = Math.floor((upper - lower)/2);
            //console.log(midpoint)
            if(this.unreserved[midpoint]-1===reservation) {
                
                this.unreserved.splice(midpoint, 0, reservation);
                return this.unreserved;
            
            } else if (this.unreserved[midpoint]+1===reservation){
                this.unreserved.splice(midpoint+1, 0, reservation);
                return this.unreserved;
            }
            
            if(this.unreserved[midpoint]<reservation) lower = midpoint;
            else if (this.unreserved[midpoint]>reservation) upper = midpoint;
            //console.log(midpoint);

           
          
          }
    
    
    /*for(let i = 0; i<this.unreserved.length; i++){
        
        if(i>=this.unreserved.length||reservation<=this.unreserved[i]){
            this.unreserved.splice(i, 0, reservation);
            return this.unreserved;
        }
        
    }*/
   
    
    //return this.unreserved.sort((a,b)=>a-b);

};

/** 
 * Your SeatManager object will be instantiated and called as such:
 * var obj = new SeatManager(n)
 * var param_1 = obj.reserve()
 * obj.unreserve(seatNumber)
 */
