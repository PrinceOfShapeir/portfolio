/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxPathSum = function(root) {
    
    let maxSum = Number.NEGATIVE_INFINITY;
    
    function pathSeeker(node) {
        
        if(!node) return 0;
        
        let left = pathSeeker(node.left);
        let right = pathSeeker(node.right);
        
        
        let newMax = Math.max(...[
            (node.left) ? left : Number.NEGATIVE_INFINITY,
            (node.right) ? right : Number.NEGATIVE_INFINITY, 
            left+right+node.val, 
            node.val,
            left+node.val,
            right+node.val]);
        
        
        if(newMax > maxSum) {
            maxSum = newMax;}
        
        return Math.max(left+node.val, right+node.val, node.val);
        
        
    }
    
    pathSeeker(root);
    return maxSum;
    
    
    
    
    
};
